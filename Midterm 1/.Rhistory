ids <- stringr::str_extract_all(ids, "<Id>[0-9]+</Id>")[[1]]
#
# Remove all the leading and trailing <Id> </Id>. Make use of "|"
ids <- stringr::str_remove_all(ids, "<Id> | </Id>")
ids
# Turn the result into a character vector
ids <- as.character(ids)
# # Find all the ids
ids <- stringr::str_extract_all(ids, "<Id>[0-9]+</Id>")[[1]]
#
# Remove all the leading and trailing <Id> </Id>. Make use of "|"
ids <- stringr::str_remove_all(ids, "<Id>|</Id>")
ids
library(httr)
query_ids <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi",
query = list(
db = "pubmed",
term = "covid19 hawaii",
retmax = 1000
)
)
# Extracting the content of the response of GET
ids <- httr::content(query_ids)
# Turn the result into a character vector
ids <- as.character(ids)
# # Find all the ids
ids <- stringr::str_extract_all(ids, "<Id>[0-9]+</Id>")[[1]]
#
# Remove all the leading and trailing <Id> </Id>. Make use of "|"
ids <- stringr::str_remove_all(ids, "<Id>|</Id>")
ids
publications <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi",
query = list(
db =  "pubmed",
id = ids,
retmax = 1000,
rettype = "abstract"
)
)
ids
ids2 = paste(ids, collapse = ",")
publications <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi",
query = list(
db =  "pubmed",
id = ids2,
retmax = 1000,
rettype = "abstract"
)
)
# Turning the output into character vector
publications <- httr::content(publications)
publications_txt <- as.character(publications)
publications_txt
# Create comma separated ids
ids2 = paste(ids, collapse = ",")
publications <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi",
path = "entrez/eutils/efetch.fcgi"
query = list(
# Create comma separated ids
ids2 = paste(ids, collapse = ",")
publications <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi",
path = "entrez/eutils/efetch.fcgi",
query = list(
db =  "pubmed",
id = ids2,
retmax = 1000,
rettype = "abstract"
)
)
# Turning the output into character vector
publications <- httr::content(publications)
publications_txt <- as.character(publications)
publications
# Create comma separated ids
ids2 = I(paste(ids, collapse = ","))
publications <- GET(
url   = "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi",
path = "entrez/eutils/efetch.fcgi",
query = list(
db =  "pubmed",
id = ids2,
retmax = 1000,
rettype = "abstract"
)
)
# Turning the output into character vector
publications <- httr::content(publications)
publications_txt <- as.character(publications)
publications
publications_txt
institution <- str_extract_all(
tolower(publications_txt),
"university\\s+of\\s+[[:alpha:]-]+|institute\\s+of\\s+[[:alpha:]-]+"
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stringr)
institution <- str_extract_all(
tolower(publications_txt),
"university\\s+of\\s+[[:alpha:]-]+|institute\\s+of\\s+[[:alpha:]-]+"
)
institution <- unlist(institution)
table(institution)
schools_and_deps <- str_extract_all(
tolower(abstracts_txt),
"school\\s+of\\s+[[:alpha:]-]+|department\\s+of\\s+[[:alpha:]-]+"
)
schools_and_deps <- str_extract_all(
tolower(publications_txt),
"school\\s+of\\s+[[:alpha:]-]+|department\\s+of\\s+[[:alpha:]-]+"
)
table(schools_and_deps)
pub_char_list <- xml2::xml_children(publications)
pub_char_list <- sapply(pub_char_list, as.character)
pub_char_list
abstracts <- str_extract(pub_char_list, "<Abstract>[[:print:][:space]]+</Abstract>")
abstracts <- str_remove_all(abstracts, "</?[[:alnum:]- =\"]+>")
abstracts <- str_replace_all(abstracts, "[[:space:]]+", " ")
abstracts[1]
pub_char_list <- xml2::xml_children(publications)
pub_char_list <- sapply(pub_char_list, as.character)
abstracts <- str_extract(pub_char_list, "<Abstract>[[:print:][:space]]+</Abstract>")
abstracts <- str_remove_all(abstracts, "</?[[:alnum:]- =\"]+>")
abstracts <- str_replace_all(abstracts, "[[:space:]]+", " ")
abstracts[1]
pub_char_list <- xml2::xml_children(publications)
pub_char_list <- sapply(pub_char_list, as.character)
abstracts <- str_extract(pub_char_list, "<Abstract>[[:print:][:space]]+</Abstract>")
# abstracts <- str_remove_all(abstracts, "</?[[:alnum:]- =\"]+>")
# abstracts <- str_replace_all(abstracts, "[[:space:]]+", " ")
abstracts[1]
pub_char_list[1]
abstracts <- str_extract(pub_char_list, "<Abstract>[[:print:][:space:]]+</Abstract>")
# abstracts <- str_remove_all(abstracts, "</?[[:alnum:]- =\"]+>")
# abstracts <- str_replace_all(abstracts, "[[:space:]]+", " ")
abstracts[1]
abstracts <- str_extract(pub_char_list, "<Abstract>[[:print:][:space:]]+</Abstract>")
abstracts <- str_remove_all(abstracts, "</?[[:alnum:]- =\"]+>")
abstracts <- str_replace_all(abstracts, "[[:space:]]+", " ")
abstracts[1]
titles <- str_extract(pub_char_list, "<ArticleTitle>[[:print:][:space:]]+</ArticleTitle>")
titles <- str_remove_all(titles, "</?[[:alnum:]- =\"]+>")
titles
database <- data.frame(
PubMedID = ids,
Title = titles,
Abstract = abstracts
)
knitr::kable(database[1:20], caption = "COVID19 & Hawaii Papers")
database <- data.frame(
PubMedID = ids,
Title = titles,
Abstract = abstracts
)
knitr::kable(database[1:20, ], caption = "COVID19 & Hawaii Papers")
database <- data.frame(
PubMedID = ids,
Title = titles,
Abstract = abstracts
)
knitr::kable(database[1:20, ], caption = "Abstracts of COVID19 & Hawaii Papers")
names(df)
library(tidyverse)
library(skimr)
library(gtools)
# Set Working Directory
setwd("C:/Users/Eugen/Desktop/PM 566/Midterm 1")
# Read Data
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
# Filter to reguar season
df <-
df %>%
filter(season_type == 'RS')
# Inspect the first 5 rows
head(df)
# Inspect Dataset
skim(df)
# Histogram of RAPTOR
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1)
# Histogram of RAPTOR by Seasons
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 1) +
facet_wrap( ~ season, scales = "free")
# Average RAPTOR by Season
ggplot(data = df, aes(x = factor(season), y = raptor_total)) +
geom_boxplot()
# Average RAPTOR by Season - Graphic
ggplot(data = df, aes(x = season, y = raptor_total)) +
geom_point() +
geom_smooth(method = "lm")
# Regression
lm(raptor_total ~ season, data = df) %>%
summary()
# Teams with highest RAPTOR
raptor_hi <-
df %>%
group_by(team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
arrange(desc(raptor.avg))
ggplot(data = raptor_hi, aes(x = raptor.avg, y = reorder(team, raptor.avg))) +
geom_bar(stat = 'identity')
# Top teams with highest RAPTOR per Season
df %>%
group_by(season, team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, desc(raptor.avg)) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 7)
names(df)
knitr::opts_chunk$set(echo = TRUE)
# Read Data
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
# Filter to reguar season
df <-
df %>%
filter(season_type == 'RS')
names(df)
df <-
df %>%
filter(poss >= 501.50 & poss <= 3471.50)
df %>%
select(poss, mp, raptor_offense, raptor_defense, raptor_total) %>%
skim()
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1) +
labs(x = "Raptor Total")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1) +
labs(x = "RAPTOR Total")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.3) +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.8) +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.7) +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1) +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram() +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = factor(season), y = raptor_total)) +
geom_boxplot()
raptor_hi <-
df %>%
group_by(team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
arrange(desc(raptor.avg))
# Get averages by team
raptor_hi <-
df %>%
group_by(team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
arrange(desc(raptor.avg))
# Plot
ggplot(data = raptor_hi, aes(x = raptor.avg, y = reorder(team, raptor.avg))) +
geom_bar(stat = 'identity')
df %>%
group_by(season, team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, desc(raptor.avg)) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 7)
df %>%
group_by(season, team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, desc(raptor.avg)) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 7) %>%
knitr::kable()
df2 %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 21)
df %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 21)
df %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 21)
# Read Data
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
names(df)
# Filter to reguar season
df <-
df %>%
filter(season_type == 'RS')
# Inspect Dataset
skim(df)
# Filter possessions between 25th and 75th percentile
df <-
df %>%
filter((poss >= 501.50 & poss <= 3471.50)) & (mp >= 241 & mp <= 1678))
# Filter possessions between 25th and 75th percentile
df <-
df %>%
filter(
(poss >= 501.50 & poss <= 3471.50) &
(mp >= 241 & mp <= 1678))
df %>%
select(poss, mp, raptor_offense, raptor_defense, raptor_total) %>%
skim()
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1) +
labs(x = "RAPTOR Total")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram() +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = factor(season), y = raptor_total)) +
geom_boxplot()
# Get averages by team
raptor_hi <-
df %>%
group_by(team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
arrange(desc(raptor.avg))
# Plot
ggplot(data = raptor_hi, aes(x = raptor.avg, y = reorder(team, raptor.avg))) +
geom_bar(stat = 'identity')
df %>%
group_by(season, team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, desc(raptor.avg)) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
knitr::kable()
df %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 21)
df2 <-
df %>%
filter(season == 2020)
df2 <-
df %>%
filter(season == 2020)
# Add z-score
df2 <-
df2 %>%
mutate(raptor.q = scale(raptor_total))
ggplot(data = df3, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q >= 2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 10)
ggplot(data = df2, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q >= 2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 10)
# Read Data
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
names(df)
# Filter to reguar season
df <-
df %>%
filter(season_type == 'RS')
# Inspect Dataset
skim(df)
# Filter possessions and minutes played above the 50th percentile
df <-
df %>%
filter(
(poss >= 1750) &
(mp >= 854)
# Filter possessions and minutes played above the 50th percentile
df <-
df %>%
filter(
(poss >= 1750) &
(mp >= 854)
)
df %>%
select(poss, mp, raptor_offense, raptor_defense, raptor_total) %>%
skim()
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram(binwidth = 0.1) +
labs(x = "RAPTOR Total")
ggplot(data = df, aes(x = raptor_total)) +
geom_histogram() +
facet_wrap( ~ season, scales = "free")
ggplot(data = df, aes(x = factor(season), y = raptor_total)) +
geom_boxplot()
# Get averages by team
raptor_hi <-
df %>%
group_by(team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
arrange(desc(raptor.avg))
# Plot
ggplot(data = raptor_hi, aes(x = raptor.avg, y = reorder(team, raptor.avg))) +
geom_bar(stat = 'identity')
df %>%
group_by(season, team) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, desc(raptor.avg)) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
knitr::kable()
df %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
filter(row_number() <=1) %>%
print(n = 21)
df %>%
group_by(season, player_name) %>%
summarise(raptor.avg = mean(raptor_total)) %>%
top_n(n=1,wt = raptor.avg)  %>%
arrange(season, raptor.avg) %>%
group_by(season) %>%
knitr::kable()
df2 <-
df %>%
filter(season == 2020)
# Add z-score
df2 <-
df2 %>%
mutate(raptor.q = scale(raptor_total))
ggplot(data = df2, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q >= 2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 10)
ggplot(data = df2, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q >= 2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 11)
ggplot(data = df3, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q <= -2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 10)
ggplot(data = df2, aes(x = raptor_offense, y = raptor_defense, label = player_name))+
geom_point() +
geom_text(aes(label=ifelse(raptor.q <= -2,as.character(player_name),'')),hjust=0,vjust=0) +
xlim(-5, 10)
names(df)
# Linear Regression
m1 <- lm(raptor_total ~ season)
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df)
summary(m1)
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df2)
summary(m1)
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df)
summary(m1)
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df)
summary(m1)
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
# Filter to regular season
df <-
df %>%
filter(season_type == 'RS')
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df)
summary(m1)
# Re-import data
df <- read.csv("C:/Users/Eugen/Desktop/PM 566/Midterm 1/nba-raptor/modern_RAPTOR_by_team.csv")
# Filter to regular season
df <-
df %>%
filter(season_type == 'RS')
# Linear Regression
m1 <- lm(raptor_total ~ season, data = df)
summary(m1)
library(tidyverse)
library(skimr)
library(ggfortify)
# Residual Diagnostics
m1 %>%
autoplot(which = 1:6, ncol = 3)
# Residual Diagnostics
m1 %>%
autoplot(which = 1:6, ncol = 3)
